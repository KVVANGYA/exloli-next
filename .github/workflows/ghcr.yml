name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      # 使用 GitHub Actions 的缓存来存储 Rust 编译缓存
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # 使用 sccache 缓存
      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: /tmp/sccache
          key: ${{ runner.os }}-sccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-sccache-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        run: |
          DATE_TAG=$(date +'%Y%m%d%H%M%S')
          GIT_SHA=$(git rev-parse --short HEAD)
          echo "date_tag=${DATE_TAG}" >> $GITHUB_ENV
          echo "git_sha=${GIT_SHA}" >> $GITHUB_ENV
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo_name=${REPO_NAME}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.repo_name }}:latest
            ghcr.io/${{ env.repo_name }}:${{ env.date_tag }}
            ghcr.io/${{ env.repo_name }}:${{ env.git_sha }}
          cache-from: type=registry,ref=ghcr.io/${{ env.repo_name }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ env.repo_name }}:buildcache,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            SCCACHE_DIR=/tmp/sccache
          outputs: type=registry,push=true
